#!/usr/bin/env bash
set -Eeuo pipefail

# TODO(gleber): do not store Junit xml output in current working directory.

export OSHT_JUNIT=1

function usage
{
    echo "Usage: dade-test-sh [-s] PATH..."
    echo "    -h - this help message"
    exit 0
}

while getopts "h" opt; do
    case "$opt" in
        h)
            usage
            exit 0
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            usage
            ;;
    esac
done

if [ $# -lt 1 ]; then
    echo "Paths not provided" >&2
    usage
    exit 1
fi

abs_paths="$@"

###############################
# OSHT Tests
###############################
# find all the tests
all_osht_tests=$(find $abs_paths -name '*.t' -type f | sort -n)

if [ -n "${all_osht_tests}" ]; then
  echo '[INFO]: OSHT test files:'
  printf '[INFO]:   %s\n' "$all_osht_tests"
fi

# Run each test independently within it's own subshell. This is necessary as
# there is a bug with the PLAN function as it does NOT reset the number of
# performed tests each time you call it. This lead to osht sometimes failing
# the test run due to too many tests being performed.
for t in $all_osht_tests; do
  echo "[INFO]: running tests in file: ${t}"
  (
    export OSHT_JUNIT_OUTPUT="${t}-tests.xml"
    source "$(nix-build --no-out-link -A tools.osht ${DADE_REPO_ROOT}/nix)/bin/osht"
    source "${t}"
  )
done

################################
# BATS tests
###############################
# find all the bats tests
all_bats_tests=$(find $abs_paths -name '*.bats' -type f | sort -n)
if [ -n "${all_bats_tests}" ]; then
  echo '[INFO]: BATS test files:'
  printf '[INFO]:   %s\n' $all_bats_tests
fi
for t in $all_bats_tests; do
  echo "[INFO]: running tests in file: ${t}"
  (
    bats -t "${t}"
  )
done
